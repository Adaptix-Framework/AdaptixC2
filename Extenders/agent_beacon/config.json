{
  "extender_type": "agent",
  "extender_file": "agent_beacon.so",

  "agent_name": "beacon",
  "agent_watermark": "be4c0149",

  "listeners": [
    {
      "listener_name": "BeaconHTTP",
      "configs" : [
        {
          "operating_system": "windows",
          "handler": "handler_external",
          "generate_ui": {
            "layout": "glayout",
            "elements": [
              {
                "type": "label",
                "text": "Arch:",
                "position": [0, 0, 1, 1]
              },
              {
                "type": "combo",
                "items": ["x64", "x86"],
                "id": "arch",
                "position": [0, 1, 1, 2]
              },
              {
                "type": "label",
                "text": "Format:",
                "position": [1, 0, 1, 1]
              },
              {
                "type": "combo",
                "items": ["Exe", "Service Exe", "DLL", "Shellcode" ],
                "id": "format",
                "position": [1, 1, 1, 2]
              },
              {
                "type": "label",
                "text": "Sleep (Jitter %):",
                "position": [2, 0, 1, 1]
              },
              {
                "type": "input",
                "id": "sleep",
                "placeholder": "1h 2m 5s",
                "text": "4s",
                "position": [2, 1, 1, 1]
              },
              {
                "type": "spinbox",
                "id": "jitter",
                "min": 0,
                "max": 100,
                "position": [2, 2, 1, 1]
              },
              {
                "type": "checkbox",
                "text": "Set 'killdate'",
                "id": "is_killdate",
                "position": [3, 0, 1, 1]
              },
              {
                "type": "date_input",
                "id": "kill_date",
                "format": "dd.MM.yyyy",
                "position": [3, 1, 1, 1]
              },
              {
                "type": "time_input",
                "id": "kill_time",
                "format": "HH:mm:ss",
                "position": [3, 2, 1, 1]
              },
              {
                "type": "checkbox",
                "text": "Set 'workingtime'",
                "id": "is_workingtime",
                "position": [4, 0, 1, 1]
              },
              {
                "type": "time_input",
                "id": "start_time",
                "format": "HH:mm",
                "position": [4, 1, 1, 1]
              },
              {
                "type": "time_input",
                "id": "end_time",
                "format": "HH:mm",
                "position": [4, 2, 1, 1]
              },
              {
                "type": "label",
                "text": "Service Name:",
                "position": [5, 0, 1, 1]
              },
              {
                "type": "input",
                "id": "svcname",
                "text": "AgentService",
                "position": [5, 1, 1, 2]
              }
            ]
          }
        }
      ]
    },
    {
      "listener_name": "BeaconSMB",
      "configs" : [
        {
          "operating_system": "windows",
          "handler": "handler_internal",
          "generate_ui": {
            "layout": "glayout",
            "elements": [
              {
                "type": "label",
                "text": "Arch:",
                "position": [0, 0, 1, 1]
              },
              {
                "type": "combo",
                "items": ["x64", "x86"],
                "id": "arch",
                "position": [0, 1, 1, 2]
              },
              {
                "type": "label",
                "text": "Format:",
                "position": [1, 0, 1, 1]
              },
              {
                "type": "combo",
                "items": ["Exe", "Service Exe", "DLL", "Shellcode" ],
                "id": "format",
                "position": [1, 1, 1, 2]
              },
              {
                "type": "checkbox",
                "text": "Set 'killdate'",
                "id": "is_killdate",
                "position": [2, 0, 1, 1]
              },
              {
                "type": "date_input",
                "id": "kill_date",
                "format": "dd.MM.yyyy",
                "position": [2, 1, 1, 1]
              },
              {
                "type": "time_input",
                "id": "kill_time",
                "format": "HH:mm:ss",
                "position": [2, 2, 1, 1]
              },
              {
                "type": "label",
                "text": "Service Name:",
                "position": [3, 0, 1, 1]
              },
              {
                "type": "input",
                "id": "svcname",
                "text": "AgentService",
                "position": [3, 1, 1, 2]
              }
            ]
          }
        }
      ]
    },
    {
      "listener_name": "BeaconTCP",
      "configs" : [
        {
          "operating_system": "windows",
          "handler": "handler_internal",
          "generate_ui": {
            "layout": "glayout",
            "elements": [
              {
                "type": "label",
                "text": "Arch:",
                "position": [0, 0, 1, 1]
              },
              {
                "type": "combo",
                "items": ["x64", "x86"],
                "id": "arch",
                "position": [0, 1, 1, 2]
              },
              {
                "type": "label",
                "text": "Format:",
                "position": [1, 0, 1, 1]
              },
              {
                "type": "combo",
                "items": ["Exe", "Service Exe", "DLL", "Shellcode" ],
                "id": "format",
                "position": [1, 1, 1, 2]
              },
              {
                "type": "checkbox",
                "text": "Set 'killdate'",
                "id": "is_killdate",
                "position": [2, 0, 1, 1]
              },
              {
                "type": "date_input",
                "id": "kill_date",
                "format": "dd.MM.yyyy",
                "position": [2, 1, 1, 1]
              },
              {
                "type": "time_input",
                "id": "kill_time",
                "format": "HH:mm:ss",
                "position": [2, 2, 1, 1]
              },
              {
                "type": "label",
                "text": "Service Name:",
                "position": [3, 0, 1, 1]
              },
              {
                "type": "input",
                "id": "svcname",
                "text": "AgentService",
                "position": [3, 1, 1, 2]
              }
            ]
          }
        }
      ]
    }
  ],

  "handlers": [
    {
      "id": "handler_external",

      "commands": [
        {
          "command": "cat",
          "message": "Task: read file",
          "description": "Read first 2048 bytes of the specified file",
          "example": "cat c:\\\\file.txt",
          "args": [
            "STRING <path>"
          ]
        },
        {
          "command": "cd",
          "message": "Task: change working directory",
          "description": "Change current working directory",
          "example": "cd C:\\Windows\\Temp",
          "args": [
            "STRING <path>"
          ]
        },
        {
          "command": "cp",
          "message": "Task: copy file",
          "description": "Copy file",
          "example": "cp src.txt dst.txt",
          "args": [
            "STRING <src>",
            "STRING <dst>"
          ]
        },
        {
          "command": "disks",
          "message": "Task: show mounted disks",
          "description": "Lists mounted drives on current system",
          "example": "disks"
        },
        {
          "command": "download",
          "message": "Task: download file to teamserver",
          "description": "Download a file",
          "example": "download C:\\file.txt",
          "args": [
            "STRING <file>"
          ]
        },
        {
          "command": "execute",
          "description": "Execute [bof] in the current process's memory",
          "subcommands":
          [
            {
              "name": "bof",
              "message": "Task: execute BOF",
              "description": "Execute Beacon Object File",
              "example": "execute bof /home/user/whoami.o",
              "args": [
                "FILE <bof> {Path to object file}",
                "STRING [param_data]"
              ]
            }
          ]
        },
        {
          "command": "exfil",
          "description": "Manage current downloads",
          "subcommands":
          [
            {
              "name": "cancel",
              "description": "Cancels a download",
              "example": "exfil cancel 1a2b3c4d",
              "args": [
                "STRING <file_id>"
              ]
            },
            {
              "name": "start",
              "description": "Resumes a download that's has been stoped",
              "example": "exfil start 1a2b3c4d",
              "args": [
                "STRING <file_id>"
              ]
            },
            {
              "name": "stop",
              "description": "Stops a download that's in-progress",
              "example": "exfil stop 1a2b3c4d",
              "args": [
                "STRING <file_id>"
              ]
            }
          ]
        },
        {
          "command": "getuid",
          "message": "Task: get username of current token",
          "description": "Prints the User ID associated with the current token",
          "example": "getuid"
        },
        {
          "command": "jobs",
          "description": "Long-running tasks manager",
          "subcommands":
          [
            {
              "name": "list",
              "message": "Task: show jobs",
              "description": "List of jobs",
              "example": "jobs list"
            },
            {
              "name": "kill",
              "message": "Task: kill job",
              "description": "Kill a specified job",
              "example": "jobs kill 1a2b3c4d",
              "args": [
                "STRING <task_id>"
              ]
            }
          ]
        },
        {
          "command": "link",
          "description": "Connect to an pivot agents",
          "subcommands":
          [
            {
              "name": "smb",
              "message": "Task: Connect to an SMB agent",
              "description": "Connect to an SMB agent and re-establish control of it",
              "example": "link smb 192.168.1.2 pipe_a1b2",
              "args": [
                "STRING <target>",
                "STRING <pipename>"
              ]
            },
            {
              "name": "tcp",
              "message": "Task: Connect to an TCP agent",
              "description": "Connect to an TCP agent and re-establish control of it",
              "example": "link tcp 192.168.1.2 8888",
              "args": [
                "STRING <target>",
                "INT <port>"
              ]
            }
          ]
        },
        {
          "command": "ls",
          "message": "Task: list of files in a folder",
          "description": "Lists files in a folder",
          "example": "ls c:\\users",
          "args": [
            "STRING <directory> (.)"
          ]
        },
        {
          "command": "lportfwd",
          "description": "Managing local port forwarding",
          "subcommands":
          [
            {
              "name": "start",
              "description": "Start local port forwarding from server via agent",
              "example": "lportfwd start 127.0.0.1 8080 192.168.1.1 8080",
              "args": [
                "STRING <lhost> (0.0.0.0) {Listening interface address on server}",
                "INT <lport> {Listen port on server}",
                "STRING <fwdhost> {Remote forwarding address}",
                "INT <fwdport> {Remote forwarding port}"
              ]
            },
            {
              "name": "stop",
              "description": "Stop local port forwarding",
              "example": "lportfwd stop 8080",
              "args": [
                "INT <lport>"
              ]
            }
          ]
        },
        {
          "command": "mv",
          "message": "Task: move file",
          "description": "Move file",
          "example": "mv src.txt dst.txt",
          "args": [
            "STRING <src>",
            "STRING <dst>"
          ]
        },
        {
          "command": "mkdir",
          "message": "Task: make directory",
          "description": "Make a directory",
          "example": "mkdir C:\\dir",
          "args": [
            "STRING <path>"
          ]
        },
        {
          "command": "profile",
          "description": "Configure the payloads profile for current session",
          "subcommands":
          [
            {
              "name": "download.chunksize",
              "message": "Task: set download chunk size",
              "description": "Change the exfiltrate data size for download request (default 128000)",
              "example": "profile download.chunksize 512000",
              "args": [
                "INT <size>"
              ]
            },
            {
              "name": "killdate",
              "message": "Task: set beacon's killdate",
              "description": "Set the date and time for the beacon to stop working.",
              "example": "profile killdate 28.02.2030 12:34:00",
              "args": [
                "STRING <datetime> { Datetime 'DD.MM.YYYY hh:mm:ss' in GMT format. Set 0 to disable the option}"
              ]
            },
            {
              "name": "workingtime",
              "message": "Task: set beacon's workingtime",
              "description": "Set the start and end time of the beacon activity",
              "example": "profile workingtime 8:00-17:30",
              "args": [
                "STRING <time> {Time interval in the format 'HH:mm(start)-HH:mm(end)'. Set 0 to disable the option}"
              ]
            }
          ]
        },
        {
          "command": "ps",
          "description": "Process manager",
          "subcommands":
          [
            {
              "name": "list",
              "message": "Task: show process list",
              "description": "Show process list",
              "example": "ps list"
            },
            {
              "name": "kill",
              "message": "Task: kill process",
              "description": "Kill a process with a given PID",
              "example": "ps kill 7865",
              "args": [
                "INT <pid>"
              ]
            },
            {
              "name": "run",
              "message": "Task: create new process",
              "description": "Run a program",
              "example": "run -s cmd.exe \"whoami /all\"",
              "args": [
                "BOOL [-s] {Suspend process}",
                "BOOL [-o] {Output to console}",
                "STRING <program>",
                "STRING [args]"
              ]
            }
          ]
        },
        {
          "command": "pwd",
          "message": "Task: print working directory",
          "description": "Print current working directory",
          "example": "pwd"
        },
        {
          "command": "rev2self",
          "message": "Task: revert token",
          "description": "Revert to your original access token",
          "example": "rev2self"
        },
        {
          "command": "rm",
          "message": "Task: remove file or directory",
          "description": "Remove a file or folder",
          "example": "rm C:\\file.txt",
          "args": [
            "STRING <path>"
          ]
        },
        {
          "command": "rportfwd",
          "description": "Managing remote port forwarding",
          "subcommands":
          [
            {
              "name": "start",
              "description": "Start remote port forwarding from agent via server",
              "example": "rportfwd start 8080 10.10.10.14 8080",
              "args": [
                "INT <lport> {Listen port on agent}",
                "STRING <fwdhost> {Remote forwarding address}",
                "INT <fwdport> {Remote forwarding port}"
              ]
            },
            {
              "name": "stop",
              "description": "Stop local remote forwarding",
              "example": "rportfwd stop 8080",
              "args": [
                "INT <lport>"
              ]
            }
          ]
        },
        {
          "command": "sleep",
          "description": "Sets sleep time",
          "example": "sleep 30m5s 10",
          "args": [
            "STRING <sleep> {Time in '%h%m%s' format or number of seconds}",
            "INT [jitter] {Max random amount of time in % added to sleep}"
          ]
        },
        {
          "command": "socks",
          "description": "Managing socks tunnels",
          "subcommands":
          [
            {
              "name": "start",
              "description": "Start a SOCKS(4a/5) proxy server and listen on a specified port",
              "example": "socks start 1080 -auth user pass",
              "args": [
                "STRING <-h address> (0.0.0.0) {Listening interface address}",
                "INT <port> {Listen port}",
                "BOOL [-socks4] {Use SOCKS4 proxy (Default SOCKS5)}",
                "BOOL [-auth] {Enable User/Password authentication for SOCKS5}",
                "STRING [username] {Username for SOCKS5 proxy}",
                "STRING [password] {Password for SOCKS5 proxy}"
              ]
            },
            {
              "name": "stop",
              "description": "Stop a SOCKS proxy server",
              "example": "socks stop 1080",
              "args": [
                "INT <port>"
              ]
            }
          ]
        },
        {
          "command": "terminate",
          "description": "Terminate the session",
          "subcommands":
          [
            {
              "name": "thread",
              "message": "Task: terminate agent thread",
              "description": "Terminate the main beacon thread (without terminating the process)",
              "example": "terminate thread"
            },
            {
              "name": "process",
              "message": "Task: terminate agent process",
              "description": "Terminate the beacon process",
              "example": "terminate process"
            }
          ]
        },
        {
          "command": "unlink",
          "message": "Task: disconnect from an pivot agent",
          "description": "Disconnect from an pivot agent",
          "example": "unlink 1a2b3c4d",
          "args": [
            "STRING <id>"
          ]
        },
        {
          "command": "upload",
          "message": "Task: upload file",
          "description": "Upload a file",
          "example": "upload /tmp/file.txt c:\\\\file.txt",
          "args": [
            "FILE <local_file>",
            "STRING <remote_path>"
          ]
        }
      ],

      "browsers": {
        "remote_terminal": false,

        "sessions_menu_tunnels": true,
        "socks4": true,
        "socks5": true,
        "lportfwd": true,
        "rportfwd": true,

        "sessions_menu_exit": true,

        "file_browser": true,
        "file_browser_disks": true,
        "file_browser_download": true,
        "file_browser_upload": true,

        "process_browser": true,

        "downloads_cancel": true,
        "downloads_resume": true,
        "downloads_pause": true,

        "tasks_job_kill": true
      }

    },
    {
      "id": "handler_internal",

      "commands": [
        {
          "command": "cat",
          "message": "Task: read file",
          "description": "Read first 2048 bytes of the specified file",
          "example": "cat c:\\\\file.txt",
          "args": [
            "STRING <path>"
          ]
        },
        {
          "command": "cd",
          "message": "Task: change working directory",
          "description": "Change current working directory",
          "example": "cd C:\\Windows\\Temp",
          "args": [
            "STRING <path>"
          ]
        },
        {
          "command": "cp",
          "message": "Task: copy file",
          "description": "Copy file",
          "example": "cp src.txt dst.txt",
          "args": [
            "STRING <src>",
            "STRING <dst>"
          ]
        },
        {
          "command": "disks",
          "message": "Task: show mounted disks",
          "description": "Lists mounted drives on current system",
          "example": "disks"
        },
        {
          "command": "download",
          "message": "Task: download file to teamserver",
          "description": "Download a file",
          "example": "download C:\\file.txt",
          "args": [
            "STRING <file>"
          ]
        },
        {
          "command": "execute",
          "description": "Execute [bof] in the current process's memory",
          "subcommands":
          [
            {
              "name": "bof",
              "message": "Task: execute BOF",
              "description": "Execute Beacon Object File",
              "example": "execute bof /home/user/whoami.o",
              "args": [
                "FILE <bof> {Path to object file}",
                "STRING [param_data]"
              ]
            }
          ]
        },
        {
          "command": "exfil",
          "description": "Manage current downloads",
          "subcommands":
          [
            {
              "name": "cancel",
              "description": "Cancels a download",
              "example": "exfil cancel 1a2b3c4d",
              "args": [
                "STRING <file_id>"
              ]
            },
            {
              "name": "start",
              "description": "Resumes a download that's has been stoped",
              "example": "exfil start 1a2b3c4d",
              "args": [
                "STRING <file_id>"
              ]
            },
            {
              "name": "stop",
              "description": "Stops a download that's in-progress",
              "example": "exfil stop 1a2b3c4d",
              "args": [
                "STRING <file_id>"
              ]
            }
          ]
        },
        {
          "command": "getuid",
          "message": "Task: get username of current token",
          "description": "Prints the User ID associated with the current token",
          "example": "getuid"
        },
        {
          "command": "jobs",
          "description": "Long-running tasks manager",
          "subcommands":
          [
            {
              "name": "list",
              "message": "Task: show jobs",
              "description": "List of jobs",
              "example": "jobs list"
            },
            {
              "name": "kill",
              "message": "Task: kill job",
              "description": "Kill a specified job",
              "example": "jobs kill 1a2b3c4d",
              "args": [
                "STRING <task_id>"
              ]
            }
          ]
        },
        {
          "command": "link",
          "description": "Connect to an pivot agents",
          "subcommands":
          [
            {
              "name": "smb",
              "message": "Task: Connect to an SMB agent",
              "description": "Connect to an SMB agent and re-establish control of it",
              "example": "link smb 192.168.1.2 pipe_a1b2",
              "args": [
                "STRING <target>",
                "STRING <pipename>"
              ]
            },
            {
              "name": "tcp",
              "message": "Task: Connect to an TCP agent",
              "description": "Connect to an TCP agent and re-establish control of it",
              "example": "link tcp 192.168.1.2 8888",
              "args": [
                "STRING <target>",
                "INT <port>"
              ]
            }
          ]
        },
        {
          "command": "ls",
          "message": "Task: list of files in a folder",
          "description": "Lists files in a folder",
          "example": "ls c:\\users",
          "args": [
            "STRING <directory> (.)"
          ]
        },
        {
          "command": "lportfwd",
          "description": "Managing local port forwarding",
          "subcommands":
          [
            {
              "name": "start",
              "description": "Start local port forwarding from server via agent",
              "example": "lportfwd start 127.0.0.1 8080 192.168.1.1 8080",
              "args": [
                "STRING <lhost> (0.0.0.0) {Listening interface address on server}",
                "INT <lport> {Listen port on server}",
                "STRING <fwdhost> {Remote forwarding address}",
                "INT <fwdport> {Remote forwarding port}"
              ]
            },
            {
              "name": "stop",
              "description": "Stop local port forwarding",
              "example": "lportfwd stop 8080",
              "args": [
                "INT <lport>"
              ]
            }
          ]
        },
        {
          "command": "mv",
          "message": "Task: move file",
          "description": "Move file",
          "example": "mv src.txt dst.txt",
          "args": [
            "STRING <src>",
            "STRING <dst>"
          ]
        },
        {
          "command": "mkdir",
          "message": "Task: make directory",
          "description": "Make a directory",
          "example": "mkdir C:\\dir",
          "args": [
            "STRING <path>"
          ]
        },
        {
          "command": "profile",
          "description": "Configure the payloads profile for current session",
          "subcommands":
          [
            {
              "name": "download.chunksize",
              "message": "Task: set download chunk size",
              "description": "Change the exfiltrate data size for download request (default 128000)",
              "example": "profile download.chunksize 512000",
              "args": [
                "INT <size>"
              ]
            }
          ]
        },
        {
          "command": "ps",
          "description": "Process manager",
          "subcommands":
          [
            {
              "name": "list",
              "message": "Task: show process list",
              "description": "Show process list",
              "example": "ps list"
            },
            {
              "name": "kill",
              "message": "Task: kill process",
              "description": "Kill a process with a given PID",
              "example": "ps kill 7865",
              "args": [
                "INT <pid>"
              ]
            },
            {
              "name": "run",
              "message": "Task: create new process",
              "description": "Run a program",
              "example": "run -s cmd.exe \"whoami /all\"",
              "args": [
                "BOOL [-s] {Suspend process}",
                "BOOL [-o] {Output to console}",
                "STRING <program>",
                "STRING [args]"
              ]
            }
          ]
        },
        {
          "command": "pwd",
          "message": "Task: print working directory",
          "description": "Print current working directory",
          "example": "pwd"
        },
        {
          "command": "rev2self",
          "message": "Task: revert token",
          "description": "Revert to your original access token",
          "example": "rev2self"
        },
        {
          "command": "rm",
          "message": "Task: remove file or directory",
          "description": "Remove a file or folder",
          "example": "rm C:\\file.txt",
          "args": [
            "STRING <path>"
          ]
        },
        {
          "command": "rportfwd",
          "description": "Managing remote port forwarding",
          "subcommands":
          [
            {
              "name": "start",
              "description": "Start remote port forwarding from agent via server",
              "example": "rportfwd start 8080 10.10.10.14 8080",
              "args": [
                "INT <lport> {Listen port on agent}",
                "STRING <fwdhost> {Remote forwarding address}",
                "INT <fwdport> {Remote forwarding port}"
              ]
            },
            {
              "name": "stop",
              "description": "Stop local remote forwarding",
              "example": "rportfwd stop 8080",
              "args": [
                "INT <lport>"
              ]
            }
          ]
        },
        {
          "command": "socks",
          "description": "Managing socks tunnels",
          "subcommands":
          [
            {
              "name": "start",
              "description": "Start a SOCKS(4a/5) proxy server and listen on a specified port",
              "example": "socks start 1080 -auth user pass",
              "args": [
                "STRING <-h address> (0.0.0.0) {Listening interface address}",
                "INT <port> {Listen port}",
                "BOOL [-socks4] {Use SOCKS4 proxy (Default SOCKS5)}",
                "BOOL [-auth] {Enable User/Password authentication for SOCKS5}",
                "STRING [username] {Username for SOCKS5 proxy}",
                "STRING [password] {Password for SOCKS5 proxy}"
              ]
            },
            {
              "name": "stop",
              "description": "Stop a SOCKS proxy server",
              "example": "socks stop 1080",
              "args": [
                "INT <port>"
              ]
            }
          ]
        },
        {
          "command": "terminate",
          "description": "Terminate the session",
          "subcommands":
          [
            {
              "name": "thread",
              "message": "Task: terminate agent thread",
              "description": "Terminate the main beacon thread (without terminating the process)",
              "example": "terminate thread"
            },
            {
              "name": "process",
              "message": "Task: terminate agent process",
              "description": "Terminate the beacon process",
              "example": "terminate process"
            }
          ]
        },
        {
          "command": "unlink",
          "message": "Task: disconnect from an pivot agent",
          "description": "Disconnect from an pivot agent",
          "example": "unlink 1a2b3c4d",
          "args": [
            "STRING <id>"
          ]
        },
        {
          "command": "upload",
          "message": "Task: upload file",
          "description": "Upload a file",
          "example": "upload /tmp/file.txt c:\\\\file.txt",
          "args": [
            "FILE <local_file>",
            "STRING <remote_path>"
          ]
        }
      ],


      "browsers": {
        "remote_terminal": false,

        "sessions_menu_tunnels": true,
        "socks4": true,
        "socks5": true,
        "lportfwd": true,
        "rportfwd": true,

        "sessions_menu_exit": true,

        "file_browser": true,
        "file_browser_disks": true,
        "file_browser_download": true,
        "file_browser_upload": true,

        "process_browser": true,

        "downloads_cancel": true,
        "downloads_resume": true,
        "downloads_pause": true,
        
        "tasks_job_kill": true
      }

    }
  ]
}